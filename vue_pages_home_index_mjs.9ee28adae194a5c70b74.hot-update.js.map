{"version":3,"file":"vue_pages_home_index_mjs.9ee28adae194a5c70b74.hot-update.js","mappings":";;;;;;;;;;;;;;AAAsD;;AAEtD,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA,KAAK;AACL;AACA;AACA,2CAA2C,+BAA+B;AAC1E,KAAK;AACL;AACA,2CAA2C,wBAAwB;AACnE,KAAK;AACL;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://webtool-web3/./vue/pages/home/index.mjs"],"sourcesContent":["import { render, staticRenderFns } from './render.pug'\n\nexport default {\n  render,\n  staticRenderFns,\n  data () {\n    return {\n      ethereum: null,\n      web3: null,\n      accounts: [],\n      balance: '',\n      transferToAddress: '',\n      transferValue: ''\n    }\n  },\n  mounted () {\n    // see https://web3js.readthedocs.io/en/v1.5.2/getting-started.html#adding-web3-js\n    this.ethereum = window.ethereum\n  },\n  updated () {\n  },\n  methods: {\n    async request (opts) {\n      // see https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3\n      const { ethereum } = this\n      return ethereum.request(opts)\n    },\n    async requestAccounts () {\n      // see https://docs.metamask.io/guide/rpc-api.html#permissions\n      this.accounts = await this.request({ method: 'eth_requestAccounts' })\n    },\n    async getAccounts () {\n      this.accounts = await this.request({ method: 'eth_accounts' })\n    },\n    async getBalance (address) {\n      const { ethereum } = this\n      address = address || ethereum.selectedAddress\n      const balance = this.balance = await this.request({\n        method: 'eth_getBalance',\n        params: [address]\n      })\n      console.log(address, balance)\n    },\n    async transfer (toAddress, value) {\n      try {\n        const transactionHash = await this.request({\n          method: 'eth_sendTransaction',\n          params: [\n            {\n              to: toAddress,\n              value: value\n            }\n          ]\n        })\n        console.log(transactionHash)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}