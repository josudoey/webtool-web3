{"version":3,"file":"de12c1ed4a166d211528.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD,0BAA0B,4BAA4B;AACtD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAkD;AAC/E,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA,yBAAyB,uCAAuC;AAChE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,SAAS,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,SAAS,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA,yBAAyB,kCAAkC;AAC3D;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,SAAS,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClMA;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA,QAAQ,qCAAqC;AAC7C;AACA;AACA;AACA,sBAAsB,SAAS,gCAAgC;AAC/D;AACA,yBAAyB,+CAA+C;AACxE,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAA2C;AAClE,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;ACnCA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAoD;AACE;;AAEtD,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA,gBAAgB;AAChB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;AClC4B;AACF;AACL;AACS;AACL;;AAE4B;AACtD,kBAAkB,+CAAe;AACjC,eAAe,0CAAa;AAC5B,WAAW,wCAAW;AACtB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yEAAyE,SAAS;AAClF;;AAEA,4BAA4B,EAAE;;AAE9B;AACA;;AAEA;AACA;AACA,aAAa,kCAAE;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sHAAsH,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,eAAe;AAC/E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,kCAAE;AAC1B;AACA;;AAEA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,YAAY,WAAW;AACvB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,aAAa,+CAAY;AACzB,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6CAA6C,+BAA+B;AAC5E,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,2CAA2C,wBAAwB;AACnE,KAAK;AACL;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,WAAW;AACzB,kBAAkB,6CAAU;;AAE5B;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://webtool-web3/./vue/pages/home/metamask-card/render.pug","webpack://webtool-web3/./vue/pages/home/render.pug","webpack://webtool-web3/ignored|/Users/joey/play/webtool-web3/node_modules/brorand|crypto","webpack://webtool-web3/ignored|/Users/joey/play/webtool-web3/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://webtool-web3/./vue/pages/home/index.mjs","webpack://webtool-web3/./vue/pages/home/metamask-card/index.mjs"],"sourcesContent":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-card\",\n    [\n      _c(\n        \"b-card-title\",\n        [\n          _vm._v(\"MetaMask\"),\n          _vm.accounts.length === 0\n            ? [\n                _c(\n                  \"b-btn\",\n                  {\n                    attrs: { variant: \"primary\" },\n                    on: { click: _vm.requestAccounts },\n                  },\n                  [_vm._v(\"requestAccounts\")]\n                ),\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm.ethereum.selectedAddress\n        ? _c(\n            \"b-card-body\",\n            [\n              _c(\"span\", [\n                _vm._v(\n                  \"Current Address: \" +\n                    _vm._s(\n                      _vm._f(\"toChecksumAddress\")(_vm.ethereum.selectedAddress)\n                    )\n                ),\n              ]),\n              _c(\"br\"),\n              _vm.balance === null &&\n              _vm.getBalance(_vm.ethereum.selectedAddress)\n                ? _c(\"b-icon\", {\n                    attrs: { icon: \"arrow-clockwise\", animation: \"spin-pulse\" },\n                  })\n                : _vm._e(),\n              _vm.balance !== null\n                ? _c(\n                    \"span\",\n                    [\n                      _vm._v(\n                        \"Balance: \" +\n                          _vm._s(_vm._f(\"ether\")(_vm.balance)) +\n                          \" Ether\"\n                      ),\n                      _c(\n                        \"b-btn\",\n                        {\n                          staticClass: \"p-0\",\n                          attrs: { variant: \"primary\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.getBalance(\n                                _vm.ethereum.selectedAddress\n                              )\n                            },\n                          },\n                        },\n                        [_c(\"b-icon-arrow-repeat\")],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\"b-form-input\", {\n                attrs: { placeholder: \"to address\" },\n                model: {\n                  value: _vm.transferToAddress,\n                  callback: function ($$v) {\n                    _vm.transferToAddress = $$v\n                  },\n                  expression: \"transferToAddress\",\n                },\n              }),\n              _c(\"b-form-input\", {\n                attrs: { placeholder: \"transfer amount(ether)\" },\n                model: {\n                  value: _vm.transferEther,\n                  callback: function ($$v) {\n                    _vm.transferEther = $$v\n                  },\n                  expression: \"transferEther\",\n                },\n              }),\n              _c(\n                \"b-btn\",\n                {\n                  attrs: { variant: \"primary\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.transfer(\n                        _vm.transferToAddress,\n                        _vm.transferEther\n                      )\n                    },\n                  },\n                },\n                [_vm._v(\"transfer\")]\n              ),\n              _vm.transactionHash\n                ? _c(\"b-alert\", { attrs: { show: \"\" } }, [\n                    _vm._v(\"tx hash: \" + _vm._s(_vm.transactionHash)),\n                  ])\n                : _vm._e(),\n              _c(\"hr\"),\n              _c(\"b-form-textarea\", {\n                attrs: { placeholder: \"message\" },\n                model: {\n                  value: _vm.message,\n                  callback: function ($$v) {\n                    _vm.message = $$v\n                  },\n                  expression: \"message\",\n                },\n              }),\n              _c(\n                \"b-btn\",\n                {\n                  attrs: { variant: \"primary\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.personalSign(_vm.message)\n                    },\n                  },\n                },\n                [_vm._v(\"personalSign\")]\n              ),\n              _vm.messageSignature\n                ? _c(\"b-alert\", { attrs: { show: \"\" } }, [\n                    _vm._v(\n                      \"message signature: \" + _vm._s(_vm.messageSignature)\n                    ),\n                  ])\n                : _vm._e(),\n              _c(\"hr\"),\n              _c(\"b-form-textarea\", {\n                attrs: { placeholder: \"recover message\" },\n                model: {\n                  value: _vm.recoverMessage,\n                  callback: function ($$v) {\n                    _vm.recoverMessage = $$v\n                  },\n                  expression: \"recoverMessage\",\n                },\n              }),\n              _c(\"b-form-textarea\", {\n                attrs: { placeholder: \"recover signature\" },\n                model: {\n                  value: _vm.recoverSignature,\n                  callback: function ($$v) {\n                    _vm.recoverSignature = $$v\n                  },\n                  expression: \"recoverSignature\",\n                },\n              }),\n              _c(\n                \"b-btn\",\n                {\n                  attrs: { variant: \"primary\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.personalRecover(\n                        _vm.recoverMessage,\n                        _vm.recoverSignature\n                      )\n                    },\n                  },\n                },\n                [_vm._v(\"personalRecover\")]\n              ),\n              _vm.recoverAddress\n                ? _c(\"b-alert\", { attrs: { show: \"\" } }, [\n                    _vm._v(\"recover address: \" + _vm._s(_vm.recoverAddress)),\n                  ])\n                : _vm._e(),\n            ],\n            1\n          )\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container-fluid px-0\" }, [\n    _vm._m(0),\n    _c(\n      \"div\",\n      { staticClass: \"container-fluid px-0\" },\n      [\n        _vm.ethereum && _vm.ethereum.isMetaMask\n          ? _c(\"metamask-card\")\n          : _c(\"a\", { attrs: { href: \"https://metamask.io/\" } }, [\n              _c(\"img\", {\n                attrs: { src: \"https://metamask.io/images/mm-logo.svg\" },\n              }),\n              _vm._v(\"Install\"),\n            ]),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"nav\", { staticClass: \"navbar navbar-dark bg-dark\" }, [\n      _c(\"div\", { staticClass: \"navbar-brand d-flex\" }, [\n        _c(\"div\", [_vm._v(\"Webtool Web3\")]),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* (ignored) */","/* (ignored) */","import MetamaskCard from './metamask-card/index.mjs'\nimport { render, staticRenderFns } from './render.pug'\n\nexport default {\n  render,\n  staticRenderFns,\n  components: {\n    MetamaskCard\n  },\n  provide () {\n    const ctx = {}\n    Object.defineProperties(ctx, {\n      ethereum: {\n        get () {\n          return window.ethereum\n        }\n      }\n    })\n    return ctx\n  },\n  data () {\n    return {\n      ethereum: null\n    }\n  },\n  mounted () {\n    // see https://web3js.readthedocs.io/en/v1.5.2/getting-started.html#adding-web3-js\n    this.ethereum = window.ethereum\n  },\n  updated () {\n  },\n  methods: {\n\n  }\n}\n","import unit from 'ethjs-unit'\nimport buffer from 'buffer'\nimport BN from 'bn.js'\nimport elliptic from 'elliptic'\nimport SHA3 from 'js-sha3'\n\nimport { render, staticRenderFns } from './render.pug'\nconst keccak256 = SHA3.keccak_256\nconst Buffer = buffer.Buffer\nconst EC = elliptic.ec\nconst ec = window.ec = new EC('secp256k1')\n\nfunction isHexString (value, length) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/59f103eb796d7caa10775288db6f682a5f18210e/packages/util/src/internal.ts#L203\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n\nfunction isHexPrefixed (str) {\n  // see https://github.com/SilentCicero/is-hex-prefixed/blob/master/src/index.js\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + ', while checking isHexPrefixed.')\n  }\n\n  return str.slice(0, 2) === '0x'\n}\n\nfunction stripHexPrefix (str) {\n  // see https://github.com/SilentCicero/strip-hex-prefix/blob/master/src/index.js\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\nfunction padToEven (value) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/58e5e0d059d55965b349c922af0ca6177bcb7f26/packages/util/src/internal.ts#L56\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\nconst bufferToInt = function (buf) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/59f103eb796d7caa10775288db6f682a5f18210e/packages/util/src/bytes.ts#L198\n  return new BN(toBuffer(buf)).toNumber()\n}\n\nconst toBuffer = function (v) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/59f103eb796d7caa10775288db6f682a5f18210e/packages/util/src/bytes.ts#L148\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n  return Buffer.from(str, 'hex')\n}\n\nconst fromRpcSig = window.fromRpcSig = function (sig) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/ade4233ddffffdd146b386de701762196a8c941c/packages/util/src/signature.ts\n  const buf = toBuffer(sig)\n  let r\n  let s\n  let v\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s\n  }\n}\n\nconst hashPersonalMessage = window.hashPersonalMessage = function (message) {\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/ade4233ddffffdd146b386de701762196a8c941c/packages/util/src/signature.ts#L196\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])), 'hex')\n}\n\nconst personalRecover = window.personalRecover = function (message, signature) {\n  // see https://github.com/ethereum/go-ethereum/pull/2940\n  const hash = hashPersonalMessage(Buffer.from(message, 'utf-8'))\n\n  // see https://github.com/ethereumjs/ethereumjs-monorepo/blob/ade4233ddffffdd146b386de701762196a8c941c/packages/util/src/signature.ts#L65\n  const sig = fromRpcSig(signature)\n  const pubPoint = ec.recoverPubKey(hash, sig, sig.v - 27)\n\n  // see  https://github.com/ethereumjs/ethereumjs-util/blob/master/src/account.ts#L249\n  const pubHex = pubPoint.encode('hex', false)\n  const pubKey = Buffer.from(pubHex, 'hex').slice(1)\n  const address = Buffer.from(keccak256(pubKey), 'hex').slice(-20).toString('hex')\n  return `0x${address}`\n}\n\nconst toChecksumAddress = function (hexAddress, eip1191ChainId) {\n  // see https://github.com/ethereumjs/ethereumjs-util/blob/master/src/account.ts#L139\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = new BN(eip1191ChainId)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccak256(prefix + address)\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport default {\n  render,\n  staticRenderFns,\n  inject: ['ethereum'],\n  data () {\n    return {\n      accounts: [],\n      balance: null,\n      transferToAddress: '',\n      transferEther: '',\n      transactionHash: '',\n      message: '',\n      messageSignature: '',\n      recoverMessage: '',\n      recoverSignature: '',\n      recoverAddress: ''\n    }\n  },\n  async mounted () {\n    const { ethereum } = this\n    const self = this\n    await this.getAccounts()\n  },\n  updated () {\n  },\n  filters: {\n    ether (wei) {\n      return unit.fromWei(wei, 'ether')\n    },\n    toChecksumAddress (address) {\n      return toChecksumAddress(address)\n    }\n  },\n  methods: {\n    async request (opts) {\n      // see https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3\n      const { ethereum } = this\n      return ethereum.request(opts)\n    },\n    async requestAccounts () {\n      // see https://docs.metamask.io/guide/rpc-api.html#permissions\n      // see https://docs.metamask.io/guide/accessing-accounts.html\n      try {\n        this.accounts = await this.request({ method: 'eth_requestAccounts' })\n      } catch (err) {\n        this.$bvToast.toast(err.message, {\n          title: '存取失敗',\n          autoHideDelay: 3000,\n          appendToast: true\n        })\n      }\n    },\n    async getAccounts () {\n      this.accounts = await this.request({ method: 'eth_accounts' })\n    },\n    async getBalance (address) {\n      // see https://eth.wiki/json-rpc/API#eth_getbalance\n      const { ethereum } = this\n      console.log('getBalance', address)\n      address = address || ethereum.selectedAddress\n      const balance = this.balance = await this.request({\n        method: 'eth_getBalance',\n        params: [address, 'latest']\n      })\n      console.log(address, balance)\n      return balance\n    },\n    async transfer (toAddress, ether) {\n      // see https://docs.metamask.io/guide/sending-transactions.html#example\n      // see https://eth.wiki/json-rpc/API#eth_sendtransaction\n      const { ethereum } = this\n      const wei = unit.toWei(ether, 'ether')\n\n      try {\n        const transactionParameters = {\n          to: toAddress,\n          from: ethereum.selectedAddress,\n          value: `0x${wei.toString(16)}`,\n          data: ''\n        }\n        console.log(transactionParameters)\n\n        const transactionHash = this.transactionHash = await this.request({\n          method: 'eth_sendTransaction',\n          params: [transactionParameters]\n        })\n\n        console.log(transactionHash)\n      } catch (err) {\n        this.$bvToast.toast(err.message, {\n          title: '發送失敗',\n          autoHideDelay: 3000,\n          appendToast: true\n        })\n        console.log(err)\n      }\n    },\n    async personalSign (message, address) {\n      // see https://github.com/ethereum/go-ethereum/pull/2940\n      const { ethereum } = this\n      address = address || ethereum.selectedAddress\n      const payload = {\n        method: 'personal_sign', params: [message, address]\n      }\n      console.log(payload)\n\n      const signature = this.messageSignature = await ethereum.request(payload)\n      console.log(signature)\n    },\n    async personalRecover (message, signature) {\n      this.recoverAddress = toChecksumAddress(personalRecover(message, signature))\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}